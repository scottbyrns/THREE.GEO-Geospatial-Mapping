THREE.GEO={};THREE.GEO.Math={degreesToRadians:function(degrees){return degrees*Math.PI/180},coordinatesToRadians:function(phi,lambda){var radianVector=new THREE.Vector2(THREE.GEO.Math.degreesToRadians(-phi)+Math.PI/2,THREE.GEO.Math.degreesToRadians(-lambda)-Math.PI/2);return radianVector}};THREE.GEO.GeoSymbol=function(mesh,material,coordinates){THREE.Mesh.apply(this,[mesh,material]);this.coordinates={phi:coordinates.phi||coordinates.lat,lambda:coordinates.lambda||coordinates.lon,radius:coordinates.radius||coordinates.elevation}};THREE.GEO.GeoSymbol.prototype=new THREE.Mesh;THREE.GEO.GeoSymbol.prototype.constructor=THREE.GEO.GeoSymbol;THREE.GEO.SpatialMap=function(config){THREE.Mesh.apply(this,arguments);this.radius=config.radius||6367;this.texture_edge_longitude=0};THREE.GEO.SpatialMap.prototype=new THREE.Mesh;THREE.GEO.SpatialMap.prototype.setCoordinates=function(coordinates){this.coordinates={phi:coordinates.phi,lambda:coordinates.lambda,radius:coordinates.radius}};THREE.GEO.SpatialMap.prototype.setTexturesEdgeLongitude=function(texture_edge_longitude){this.texture_edge_longitude=texture_edge_longitude};THREE.GEO.SpatialMap.prototype.setRadius=function(radius){this.radius=radius};THREE.GEO.SpatialMap.prototype.updateGeoSymbol=function(geoSymbol){if(!(geoSymbol instanceof THREE.GEO.GeoSymbol||geoSymbol instanceof THREE.GEO.SpatialMap)){console.warn("A must provide an instance of THREE.GEO.SpatialMap.GeoSymbol.");return}var radius=this.radius;if(geoSymbol.coordinates.radius){radius+=geoSymbol.coordinates.radius}var phi=(90-geoSymbol.coordinates.phi)*Math.PI/180;var theta=(180-(geoSymbol.coordinates.lambda-this.texture_edge_longitude))*Math.PI/180;var scale=1;if(geoSymbol instanceof THREE.GEO.SpatialMap){geoSymbol.position.x=radius*Math.sin(phi)*Math.cos(theta)/scale;geoSymbol.position.z=radius*Math.cos(phi)/scale;geoSymbol.position.y=radius*Math.sin(phi)*Math.sin(theta)/scale}else if(geoSymbol instanceof THREE.GEO.GeoSymbol){geoSymbol.position.x=radius*Math.sin(phi)*Math.cos(theta)/scale;geoSymbol.position.z=radius*Math.cos(phi)/scale;geoSymbol.position.y=radius*Math.sin(phi)*Math.sin(theta)/scale}};THREE.GEO.SpatialMap.prototype.addGeoSymbol=function(geoSymbol){if(!(geoSymbol instanceof THREE.GEO.GeoSymbol||geoSymbol instanceof THREE.GEO.SpatialMap)){console.warn("A must provide an instance of THREE.GEO.SpatialMap.GeoSymbol.");return}var radius=this.radius;if(geoSymbol.coordinates.radius){radius+=geoSymbol.coordinates.radius}var phi=(90-geoSymbol.coordinates.phi)*Math.PI/180;var theta=(180-(geoSymbol.coordinates.lambda-this.texture_edge_longitude))*Math.PI/180;var scale=1;if(geoSymbol instanceof THREE.GEO.SpatialMap){geoSymbol.position.x=radius*Math.sin(phi)*Math.cos(theta);geoSymbol.position.z=radius*Math.cos(phi);geoSymbol.position.y=radius*Math.sin(phi)*Math.sin(theta);this.add(geoSymbol)}else if(geoSymbol instanceof THREE.GEO.GeoSymbol){geoSymbol.position.x=radius*Math.sin(phi)*Math.cos(theta)/scale;geoSymbol.position.z=radius*Math.cos(phi)/scale;geoSymbol.position.y=radius*Math.sin(phi)*Math.sin(theta)/scale;this.add(geoSymbol)}};THREE.GEO.SpatialMap.prototype.coordinatesToVector3=function(radianCoordinates){var vector=new THREE.Vector3;vector.set(radianCoordinates.x,radianCoordinates.y-Math.PI/2,this.radius);vector.set(this.radius*Math.cos(vector.y)*Math.sin(vector.x),this.radius*Math.sin(vector.y)*Math.sin(vector.x),this.radius*Math.cos(vector.x));return vector};THREE.GEO.SpatialMap.prototype.constructor=THREE.GEO.SpatialMap;